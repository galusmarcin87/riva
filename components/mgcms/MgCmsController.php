<?php

namespace app\components\mgcms;

use app\components\GetResponse\GetResponse;
use app\models\LoginForm;
use yii\web\Controller;
use Yii;

/**
 * Default controller for the `backend` module
 */
class MgCmsController extends Controller
{

    public $language;

    public function beforeAction($action)
    {
        $this->language = Yii::$app->language;
        $this->view->title = Yii::$app->name;
        $this->_setContainerParams();
        $this->initNewsetterGetResponse();
        $this->_initContact();


        return parent::beforeAction($action);
    }

    private function _login()
    {
        if (Yii::$app->request->post('LoginForm')) {
            $model = new LoginForm();
            if ($model->load(Yii::$app->request->post()) && $model->login()) {
                return $this->redirect('/');
            }
        }
    }

    /**
     *
     * @return \app\models\mgcms\db\User
     */
    public function getUserModel()
    {
        return Yii::$app->user ? Yii::$app->user->identity : false;
    }

    private function _setContainerParams()
    {
        foreach (Yii::$app->params['containerComponents'] as $class => $config) {
            Yii::$container->set($class, $config);
        }
    }

    public function initNewsetterGetResponse()
    {
        if (Yii::$app->request->post('newsletterEmail')) {
            $api_key = MgHelpers::getConfigParam('getResponseApiKEy');
            $api = new GetResponse($api_key);
            $campaignId = MgHelpers::getSetting('getResponse_list_token_' . Yii::$app->language, false, 'aWsnx');
            $res = $api->addContact(['email' => Yii::$app->request->post('newsletterEmail'), 'campaign' => ['campaignId' => $campaignId], 'dayOfCycle' => 0]);
            if (!empty($res->message)) {
                MgHelpers::setFlashError(Yii::t('db', 'Error during adding to newsletter') . ': ' . $res->message);
            } else {
                MgHelpers::setFlashSuccess(Yii::t('db', 'Email successfully subscribed'));
            }
        }
    }

    public function back()
    {
        return $this->redirect(Yii::$app->request->referrer);
    }

    public function throw404()
    {
        MgHelpers::throw404();
    }

    public function afterAction($action, $result)
    {
        $this->_login();
        return parent::afterAction($action, $result); // TODO: Change the autogenerated stub
    }

    private function _initContact()
    {
        if (Yii::$app->request->post('contact_submit')) {
            $post = Yii::$app->request->post();
            if (!$post['contact_name'] || !$post['contact_phone'] || !$post['contact_time']) {
                MgHelpers::setFlashError(Yii::t('db', 'Please fill all contact inputs'));
                return false;
            }

            $email = MgHelpers::getSetting('contact_email', false, 'mzielinska@vertes.pl');
            Yii::$app->mailer->compose('contactSlider', ['post' => $post])
                ->setTo($email)
                ->setFrom([$email => $email])
                ->setSubject(Yii::t('db', 'Contact'))
                ->send();


            MgHelpers::getSettingTranslated('contact_mail_notification', 'Thank you for contacting us');
        }
    }
}
